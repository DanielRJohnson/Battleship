Constants.py: This file contains of all the constants that have been used throughout the main code in Battleship.py. For example, colors (Red, Green, Blue, Black), Square size, Window size, etc.

Grid.py: This class creates the skeleton of our game that is the grid and methods that make this grid a battleground. The grid is divided in four quadrants giving each player a quadrant to attack and defense. This class contains of two main methods—Shoot and Winner. Shoot method allows players to fire on opponent’s ships by first verifying if the player is shooting within the bounds and then giving the results of their shot (hit or miss). The game ends immediately when one of the players has destroyed all of the opponent’s ships. Winner method compares the hits for each player and chooses the winner accordingly.

Ship.py: This class creates the object players are fighting with—SHIP and its method to define its role in the game. Ship is simply a node that players place on the grid. This class consists of two methods-checkSunk method and addSquare method. CheckSunk method checks if all the ships have sunk by going through each square of a players quadrant looking for hits. AddSquare method allows user to place a ship in their defense quadrant, verifying that the ship is being placed with the players defense bounds.

Main.py: creates a game and runs it on Battleship class.

Battleship.py: This class is the main console of the game, where the ships meet the Battleground. Players mainly interact with Battleship class and this is where the game actually runs. It contains of many methods- rotateDirVec, draw, checkValidShip, placeship and run. rotateDirVec method allows players to rotate the ships clockwise while placing them on the gird, giving them more flexibility in terms of space. Draw class is where the grid is drawn. It allows players to shoot and place their ships and the screen is updated for the next frame. CheckValidShip class checks if the ship being placed by player 1 or player 2 is valid (check if it is within the bounds or any of the squares have already been occupied) and accordingly the mouse input is mapped on to the grid. Place ship goes through all ship squares set to be placed, and places them onto the grid. Run method brings all the methods together and this method does not end until the game is finished. This method is basically a loop that organizes all the methods decribed above in a correct sequence and keeps the game running.